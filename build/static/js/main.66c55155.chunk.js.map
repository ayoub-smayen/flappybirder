{"version":3,"sources":["components/Game/Game.js","components/Bird/Bird.js","components/Foreground/Foreground.js","components/Pipe/Pipe.js","App.js","reducers/bird.js","reducers/pipe.js","reducers/index.js","reducers/game.js","index.js"],"names":["gameLoop","pipeGenerator","connect","Bird","y","r","className","style","top","transform","transition","Foreground","Pipe","x","pipes","map","i","topHeight","key","position","left","height","check","dispatch","getState","state","birdY","challenge","x1","y1","x2","y2","filter","type","length","mapDispatchToProps","start","Game","status","setInterval","fly","clearInterval","useEffect","document","addEventListener","e","keyCode","console","log","App","store","initialState","combineReducers","Math","round","random","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66c55155.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Bird from \"../Bird/Bird\";\r\nimport Foreground from \"../Foreground/Foreground\";\r\nimport Pipe from \"../Pipe/Pipe\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Game.css\";\r\n\r\nlet gameLoop;\r\nlet pipeGenerator;\r\n\r\nconst Game = ({ status, start, fly }) => {\r\n  if (status === \"game-over\") {\r\n    clearInterval(gameLoop);\r\n    clearInterval(pipeGenerator);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (e.keyCode === 32) {\r\n        fly();\r\n      }\r\n      if (status !== \"playing\") {\r\n        start();\r\n      }\r\n    };\r\n    document.addEventListener(\"keypress\", handleKeyPress);\r\n  }, [fly, start, status]);\r\n\r\n  console.log(\"status\", status);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <Bird />\r\n      <Pipe />\r\n      <Foreground />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst fly = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"FLY\" });\r\n  };\r\n};\r\n\r\nconst start = () => {\r\n  return (dispatch, getState) => {\r\n    const { status } = getState().Game;\r\n    if (status !== \"playing\") {\r\n      gameLoop = setInterval(() => {\r\n        dispatch({ type: \"FALL\" });\r\n        dispatch({ type: \"RUNNING\" });\r\n\r\n        check(dispatch, getState);\r\n      }, 200);\r\n\r\n      pipeGenerator = setInterval(() => {\r\n        dispatch({ type: \"GENERATE\" });\r\n      }, 2000);\r\n      dispatch({ type: \"START\" });\r\n    }\r\n  };\r\n};\r\n\r\nconst check = (dispatch, getState) => {\r\n  const state = getState();\r\n  const birdY = state.Bird.y;\r\n  const pipes = state.Pipe.pipes;\r\n  const x = state.Pipe.x;\r\n  const challenge = pipes\r\n    .map(({ topHeight }, i) => {\r\n      return {\r\n        x1: x + i * 200,\r\n        y1: topHeight,\r\n        x2: x + i * 200,\r\n        y2: topHeight + 100,\r\n      };\r\n    })\r\n    .filter(({ x1 }) => {\r\n      if (x1 > 0 && x1 < 288) {\r\n        return true;\r\n      }\r\n    });\r\n  if (birdY > 512 - 108) {\r\n    dispatch({ type: \"GAME_OVER\" });\r\n  }\r\n  if (challenge.length) {\r\n    const { x1, y1, x2, y2 } = challenge[0];\r\n    if (\r\n      (x1 < 120 && 120 < x1 + 52 && birdY < y1) ||\r\n      (x2 < 120 && 120 < x2 + 52 && birdY > y2)\r\n    ) {\r\n      dispatch({ type: \"GAME_OVER\" });\r\n    }\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ Game }) => {\r\n  return {\r\n    status: Game.status,\r\n  };\r\n};\r\nconst mapDispatchToProps = { start, fly };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Bird.css\";\r\nconst Bird = ({ y, r }) => {\r\n  return (\r\n    <div\r\n      className=\"Bird\"\r\n      style={{\r\n        top: y,\r\n        transform: `rotate(${r}deg)`,\r\n        transition: \"transform 200ms, top 200ms\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ Bird }) => ({ y: Bird.y, r: Bird.r });\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Bird);\r\n","import React from \"react\";\r\n\r\nimport \"./Foreground.css\";\r\nconst Foreground = () => {\r\n  return <div className=\"Foreground\"></div>;\r\n};\r\n\r\nexport default Foreground;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Pipe.css\";\r\nconst Pipe = ({ x, pipes }) => {\r\n  return (\r\n    <div className=\"Pipe\">\r\n      {pipes.map(({ topHeight }, i) => (\r\n        <div key={`pipe-${i}`} style={{ position: \"relative\" }}>\r\n          <div\r\n            className=\"Pipe-top\"\r\n            style={{\r\n              left: x + i * 200,\r\n              height: topHeight,\r\n              transition: \"left 200ms\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\"Pipe-bottom\"\r\n            style={{\r\n              left: x + i * 200,\r\n              top: topHeight + 100,\r\n              transition: \"left 200ms\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ Pipe }) => {\r\n  return {\r\n    x: Pipe.x,\r\n    pipes: Pipe.pipes,\r\n  };\r\n};\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pipe);\r\n","import React from \"react\";\r\nimport Game from \"./components/Game/Game\";\r\n\r\nconst App = ({ store }) => {\r\n  return (\r\n    <div>\r\n      <Game />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const initialState = {\r\n  y: 250,\r\n  r: 0,\r\n};\r\n\r\nexport default (state = initialState, { type } = {}) => {\r\n  switch (type) {\r\n    case \"FLY\":\r\n      return { ...state, y: state.y - 50, r: -20 };\r\n    case \"FALL\":\r\n      return { ...state, y: state.y + 30, r: 0 };\r\n    case \"GAME_OVER\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  x: 300,\r\n  pipes: [],\r\n};\r\n\r\nexport default (state = initialState, { type } = {}) => {\r\n  switch (type) {\r\n    case \"RUNNING\":\r\n      return { ...state, x: state.x - 10 };\r\n    case \"GENERATE\":\r\n      const topHeight = Math.round(Math.random() * 200) + 50;\r\n      return { ...state, pipes: [...state.pipes, { topHeight }] };\r\n    case \"GAME_OVER\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport Game from \"./game\";\r\nimport Bird from \"./bird\";\r\nimport Pipe from \"./pipe\";\r\nexport default combineReducers({\r\n  Game,\r\n  Bird,\r\n  Pipe,\r\n});\r\n","export default (state = {}, { type } = {}) => {\r\n  switch (type) {\r\n    case \"START\":\r\n      return { ...state, status: \"playing\" };\r\n    case \"GAME_OVER\":\r\n      return { ...state, status: \"game-over\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//open Redux DevTool\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}